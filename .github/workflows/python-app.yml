name: Python application

on:
  push:
    branches: [ "main" ,"prueba"]
   
  pull_request:
    branches: [ "main","prueba" ]

    

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage flake8 bandit safety
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Treat all other issues as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run security checks
      run: |
        # Run Bandit for security issues
        bandit -r .
        # Check dependencies for known vulnerabilities
        safety check

    - name: Run unit tests with coverage
      run: |
        # Run unit tests and generate a coverage report
        coverage run -m unittest discover -s src -p "*.py"
        coverage report
        coverage html

    - name: Run integration tests with coverage
      run: |
        # Run integration tests and generate a separate coverage report
        coverage run -m unittest discover -s src -p "*.py"
        coverage report
        coverage html

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: htmlcov/

    - name: Analyze coverage results
      run: |
        # Fail the pipeline if coverage is below threshold
        coverage report --fail-under=80

    - name: Deploy to staging
      if: success()  # Only deploy if all tests passed
      run: |
        echo "Deploying to staging environment..."
        # Add your deployment script or commands here

  nightly:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage flake8 bandit safety
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run full test suite
      run: |
        # Run all tests and generate a coverage report
        coverage run -m unittest discover -s tests -p "*.py"
        coverage report
        coverage html

    - name: Check dependency updates
      run: |
        # Check for outdated dependencies
        pip list --outdated

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: nightly-coverage-report
        path: htmlcov/
